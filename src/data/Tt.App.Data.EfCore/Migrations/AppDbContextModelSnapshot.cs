// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tt.App.Data.EfCore;

namespace Tt.App.Data.EfCore.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Tt.App.Data.Product", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<string>("ProductCategoryId");

                    b.HasKey("Id");

                    b.HasIndex("ProductCategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = "edf6654f-3612-4914-aa86-1b09ef44e8fd",
                            Name = "Product 1"
                        },
                        new
                        {
                            Id = "7f78ff0f-af4d-41d7-8c6a-a836ed3025cc",
                            Name = "Product 2"
                        },
                        new
                        {
                            Id = "056754ca-e288-4439-b0bd-8a33afcbfcdc",
                            Name = "Product 3"
                        });
                });

            modelBuilder.Entity("Tt.App.Data.ProductCategory", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("ProductCategories");

                    b.HasData(
                        new
                        {
                            Id = "1198eb30-79cb-42ce-a053-037596e053e7",
                            Name = "Category 1"
                        },
                        new
                        {
                            Id = "a7f79f0d-e248-406a-9aed-aec22aeb3ac2",
                            Name = "Category 2"
                        });
                });

            modelBuilder.Entity("Tt.App.Data.ProductCategoryProduct", b =>
                {
                    b.Property<string>("ProductCategoryId");

                    b.Property<string>("ProductId");

                    b.HasKey("ProductCategoryId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductCategoryProduct");

                    b.HasData(
                        new
                        {
                            ProductCategoryId = "1198eb30-79cb-42ce-a053-037596e053e7",
                            ProductId = "edf6654f-3612-4914-aa86-1b09ef44e8fd"
                        },
                        new
                        {
                            ProductCategoryId = "a7f79f0d-e248-406a-9aed-aec22aeb3ac2",
                            ProductId = "7f78ff0f-af4d-41d7-8c6a-a836ed3025cc"
                        },
                        new
                        {
                            ProductCategoryId = "1198eb30-79cb-42ce-a053-037596e053e7",
                            ProductId = "056754ca-e288-4439-b0bd-8a33afcbfcdc"
                        });
                });

            modelBuilder.Entity("Tt.App.Data.Product", b =>
                {
                    b.HasOne("Tt.App.Data.ProductCategory")
                        .WithMany("Products")
                        .HasForeignKey("ProductCategoryId");
                });

            modelBuilder.Entity("Tt.App.Data.ProductCategoryProduct", b =>
                {
                    b.HasOne("Tt.App.Data.ProductCategory", "ProductCategory")
                        .WithMany()
                        .HasForeignKey("ProductCategoryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Tt.App.Data.Product", "Product")
                        .WithMany("ProductCategoryProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
